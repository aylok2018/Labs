task 1
using System;

class Book
{
    private Title title;
    private Author author;
    private Content content;

    public Book(string title, string author, string content)
    {
        this.title = new Title(title);
        this.author = new Author(author);
        this.content = new Content(content);
    }

    public void Show()
    {
        Console.ForegroundColor = ConsoleColor.Green;
        title.Show();
        Console.ForegroundColor = ConsoleColor.Blue;
        author.Show();
        Console.ForegroundColor = ConsoleColor.Red;
        content.Show();
        Console.ResetColor();
    }
}

class Title
{
    private string title;

    public Title(string title)
    {
        this.title = title;
    }

    public void Show()
    {
        Console.WriteLine($"Title: {title}");
    }
}

class Author
{
    private string author;

    public Author(string author)
    {
        this.author = author;
    }

    public void Show()
    {
        Console.WriteLine($"Author: {author}");
    }
}

class Content
{
    private string content;

    public Content(string content)
    {
        this.content = content;
    }

    public void Show()
    {
        Console.WriteLine($"Content: {content}");
    }
}

class Program
{
    static void Main()
    {
        Book book = new Book("The Hobbit, or There and Back Again", "John Ronald Reuel Tolkien.", "the journey of the gobit of Bilbo Torbin, the enchanter of Gandalf and the thirteen dwarves");
        book.Show();
    }
}


task 2
using System;

class Point
{
    public int X { get; set; }
    public int Y { get; set; }
    public string Name { get; set; }

    public Point(int x, int y, string name)
    {
        X = x;
        Y = y;
        Name = name;
    }
}

class Figure
{
    private Point[] points;

    public Figure(Point p1, Point p2, Point p3)
    {
        points = new Point[] { p1, p2, p3 };
    }

    public Figure(Point p1, Point p2, Point p3, Point p4)
    {
        points = new Point[] { p1, p2, p3, p4 };
    }

    public Figure(Point p1, Point p2, Point p3, Point p4, Point p5)
    {
        points = new Point[] { p1, p2, p3, p4, p5 };
    }

    public double LengthSide(Point A, Point B)
    {
        return Math.Sqrt(Math.Pow(B.X - A.X, 2) + Math.Pow(B.Y - A.Y, 2));
    }

    public void PerimeterCalculator()
    {
        double perimeter = 0;
        for (int i = 0; i < points.Length - 1; i++)
        {
            perimeter += LengthSide(points[i], points[i + 1]);
        }
        perimeter += LengthSide(points[points.Length - 1], points[0]);

        Console.WriteLine($"Perimeter of the figure: {perimeter}");
    }
}

class Program
{
    static void Main()
    {
        Point p1 = new Point(0, 0, "A");
        Point p2 = new Point(0, 1, "B");
        Point p3 = new Point(1, 1, "C");

        Figure figure = new Figure(p1, p2, p3);
        figure.PerimeterCalculator();
    }
}
